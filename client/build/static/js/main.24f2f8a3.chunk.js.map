{"version":3,"sources":["utils/constants.js","components/LoginBtn.js","components/LogoutBtn.js","api/getLoggedInUser.js","store/general.js","components/TopNavBar.js","components/ContentWrapper.js","api/getCarouselSlides.js","api/getPosts.js","components/pages/HomePage/index.js","components/pages/SignUp.js","api/getPost.js","components/LoadingPageMessage.js","components/pages/ShowPost.js","api/approveUser.js","api/deleteUser.js","components/pages/AdminPanel/UsersTab.js","api/getUsers.js","components/pages/AdminPanel/index.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["module","exports","baseUrl","LoginBtn","props","onLogin","onFailure","clientId","buttonText","onSuccess","cookiePolicy","LogoutBtn","onLogoutSuccess","localStorage","removeItem","window","location","getLoggedInUser","a","url","Constants","getOptions","method","headers","getItem","fetch","userRes","json","generalSlice","createSlice","name","initialState","loggedInUser","reducers","loginUser","state","action","userObj","payload","firstName","first_name","lastName","last_name","email","imageUrl","image_url","isApproved","is_approved","isAdmin","is_admin","actions","TopNavBar","loginRes","this","history","setItem","tokenId","user","push","res","console","log","Navbar","bg","variant","Brand","href","Nav","className","Link","onClick","target","Dropdown","alignRight","Toggle","id","src","style","height","marginRight","Menu","Item","Fragment","handleLoginSuccess","handleLoginFailure","React","Component","mapDispatchToProps","connect","general","withRouter","ContentWrapper","children","padding","background","getCarouselSlides","img_src","label","sub_text","getPosts","title","short_description","description","HomePage","carouselSlides","posts","loadingPage","setState","alert","Carousel","controls","map","slide","objectFit","Caption","margin","maxWidth","marginBottom","color","textAlign","display","justifyContent","post","Card","width","Img","Body","Title","Text","Button","SignUp","getPost","LoadingPageMessage","alignItems","Spinner","animation","marginLeft","ShowPost","loading","match","params","approveUser","putOptions","deleteUser","deleteOptions","UsersTab","userId","users","Table","striped","bordered","hover","index","key","handleApproveClick","cursor","handleDeleteUserClick","getUsers","usersRes","StyledWrapper","styled","div","AdminPanel","activeKey","Tabs","onSelect","tab","paddingBottom","borderBottom","Tab","eventKey","disabled","App","exact","path","component","Boolean","hostname","reducer","combineReducers","configureStore","ReactDOM","render","store","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24f2f8a3.chunk.js","sourcesContent":["module.exports = {\n    baseUrl: 'http://localhost:5000'\n};\n","import React from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nfunction LoginBtn(props) {\n  const { onLogin, onFailure } = props;\n\n  return (\n    <GoogleLogin\n      clientId=\"400414767165-htug20sknn027u3oif8cse8262bvclfv.apps.googleusercontent.com\"\n      buttonText=\"Signup/Login\"\n      onSuccess={onLogin}\n      onFailure={onFailure}\n      cookiePolicy={'single_host_origin'}\n    />\n  )\n}\n\nexport default LoginBtn;\n","import React from 'react';\nimport { GoogleLogout } from 'react-google-login';\n\nfunction LogoutBtn() {\n  const responseGoogle = () => {\n    localStorage.removeItem('tokenId');\n\n    // TODO: use history instead\n    window.location = '/';\n  };\n\n  return (\n    <GoogleLogout\n      clientId=\"400414767165-htug20sknn027u3oif8cse8262bvclfv.apps.googleusercontent.com\"\n      buttonText=\"Logout\"\n      onLogoutSuccess={responseGoogle}\n    />\n  )\n}\n\nexport default LogoutBtn;","import Constants from '../utils/constants';\n\nexport default async function getLoggedInUser() {\n  const url = `${Constants.baseUrl}/api/users/logged_in`;\n\n  const getOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': localStorage.getItem('tokenId'),\n    }\n  };\n\n  const userRes = await fetch(url, getOptions);\n\n  return await userRes.json();\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst generalSlice = createSlice({\n  name: 'general',\n  initialState: {\n    loggedInUser: null\n  },\n  reducers: {\n    loginUser: (state, action) => {\n      const { userObj } = action.payload;\n\n      const {\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        image_url: imageUrl,\n        is_approved: isApproved,\n        is_admin: isAdmin\n      } = userObj;\n\n      state.loggedInUser = { firstName, lastName, email, imageUrl, isApproved, isAdmin };\n    }\n  }\n});\n\nexport const {\n  loginUser\n} = generalSlice.actions;\n\nexport default generalSlice.reducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Navbar, Dropdown } from \"react-bootstrap\";\nimport { withRouter } from 'react-router';\n\nimport LoginBtn from \"./LoginBtn\";\nimport LogoutBtn from \"./LogoutBtn\";\n\nimport getLoggedInUser from \"../api/getLoggedInUser\";\n\nimport { loginUser } from '../store/general';\n\nclass TopNavBar extends React.Component {\n  async handleLoginSuccess(loginRes) {\n    const { loginUser, history } = this.props;\n\n    // will include this tokenId with every request\n    localStorage.setItem('tokenId', loginRes.tokenId);\n\n    const user = await getLoggedInUser();\n\n    loginUser({ userObj: user[0] });\n\n    if (!user[0].isApproved) {\n      // put user on sign-up page to complete profile\n      history.push('/sign-up')\n    }\n  }\n\n  handleLoginFailure(res) {\n    console.log('res', res);\n  }\n\n  render() {\n    const { loggedInUser, history } = this.props;\n\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">NPSFYC</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link onClick={() => history.push('/')}>Home</Nav.Link>\n\n          <Nav.Link href=\"https://ca-logos.printavo.com/merch/npsfyc\" target='_blank'>\n            Apparel\n          </Nav.Link>\n\n          <Nav.Link href=\"#pricing\">Contact Us</Nav.Link>\n        </Nav>\n\n        <Nav>\n          {!loggedInUser ?\n            <LoginBtn\n              onLogin={(res) => this.handleLoginSuccess(res)}\n              onFailure={(res) => this.handleLoginFailure(res)}\n            />\n            :\n            <Dropdown alignRight>\n              <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                <img\n                  src={loggedInUser.imageUrl}\n                  style={{ height: '3em', marginRight: '1em' }}\n                />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={() => history.push('/sign-up')}>\n                    Profile\n                </Dropdown.Item>\n\n                <Dropdown.Item onClick={() => history.push('/my-rentals')}>My Rentals</Dropdown.Item>\n\n                {!!loggedInUser.isAdmin &&\n                  <React.Fragment>\n                    <Dropdown.Item onClick={() => history.push('/admin-panel')}>Admin Panel</Dropdown.Item>\n                  </React.Fragment>\n                }\n\n                <Dropdown.Item><LogoutBtn/></Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          }\n        </Nav>\n      </Navbar>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { loggedInUser } = state.general;\n\n  return { loggedInUser };\n};\n\nconst mapDispatchToProps = { loginUser };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(TopNavBar));\n","import React from 'react';\n\n/**\n * Container component to wrap each page's content for style purposes\n */\nexport default class ContentWrapper extends React.Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div\n        style={{\n          padding: '2em 5em',\n          height: '100%',\n          background: '#004679'\n        }}\n      >\n        {children}\n      </div>\n    )\n  }\n}\n","// import Constants from '../utils/constants';\n\nexport default async function getCarouselSlides() {\n  return [\n    {\n      img_src: 'http://loremflickr.com/1600/400/sailing',\n      label: 'First slide label',\n      sub_text: 'Nulla vitae elit libero, a pharetra augue mollis interdum.'\n    },\n    {\n      img_src: 'http://loremflickr.com/1600/400/boats',\n      label: 'Second slide label',\n      sub_text: 'Nulla vitae elit libero, a pharetra augue mollis interdum.'\n    },\n    {\n      img_src: 'http://loremflickr.com/1600/400/navy',\n      label: 'Third slide label',\n      sub_text: 'Nulla vitae elit libero, a pharetra augue mollis interdum.'\n    }\n  ];\n\n  // TODO: implement real endpoint\n  // const url = `${Constants.baseUrl}/api/homepage_carousel_slides`;\n  //\n  // const slidesRes = await fetch(url);\n  //\n  // return await slidesRes.json();\n}\n","// import Constants from '../utils/constants';\n\nexport default async function getPosts() {\n  return [\n    {\n      id: '1',\n      img_src: 'http://loremflickr.com/400/600/sailing',\n      title: 'Title 1',\n      short_description: 'descrip1',\n      description: 'descrip1'\n    },\n    {\n      id: '2',\n      img_src: 'http://loremflickr.com/400/600/friend',\n      title: 'Title 2',\n      short_description: 'descrip2',\n      description: 'descrip2'\n    },\n    {\n      id: '3',\n      img_src: 'http://loremflickr.com/400/600/spongebob',\n      title: 'Title 3',\n      short_description: 'descrip3',\n      description: 'descrip3'\n    }\n  ];\n\n  // TODO: implement real endpoint\n  // const url = `${Constants.baseUrl}/api/posts`;\n  //\n  // const postsRes = await fetch(url);\n  //\n  // return await postsRes.json();\n}\n","import React from 'react';\nimport { Carousel, Card, Button } from \"react-bootstrap\";\n\nimport ContentWrapper from \"../../ContentWrapper\";\nimport getCarouselSlides from \"../../../api/getCarouselSlides\";\nimport getPosts from \"../../../api/getPosts\";\n\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.carouselSlides = [];\n    this.posts = [];\n\n    this.state = {\n      loadingPage: true\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.carouselSlides = await getCarouselSlides();\n      this.posts = await getPosts();\n\n      this.setState({ loadingPage: false });\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n  render() {\n    const { history } = this.props;\n    const { carouselSlides } = this;\n\n    return (\n      <React.Fragment>\n        <Carousel controls>\n          {carouselSlides.map(slide =>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src={slide.img_src}\n                style={{\n                  height: '22.5em',\n                  objectFit: 'cover'\n                }}\n              />\n\n              <Carousel.Caption>\n                <h3>{slide.label}</h3>\n                <p>{slide.sub_text}</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n          )}\n        </Carousel>\n\n        <ContentWrapper>\n          <div style={{ margin: '0 auto', maxWidth: '45em' }}>\n            <h2\n              style={{\n                marginBottom: '1em',\n                color: 'white',\n                textAlign: 'center'\n              }}\n            >\n              News/Announcements\n            </h2>\n\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-around',\n                margin: '1em auto 0 auto'\n              }}\n            >\n              {this.posts.map(post =>\n                <Card style={{ width: '18rem' }}>\n                  <Card.Img variant=\"top\" src={post.img_src} />\n                  <Card.Body>\n                    <Card.Title>{post.title}</Card.Title>\n                    <Card.Text>{post.short_description}</Card.Text>\n                    <Button\n                      variant=\"primary\"\n                      onClick={() => history.push(`/posts/${post.id}`)}\n                    >\n                      See more\n                    </Button>\n                  </Card.Body>\n                </Card>\n              )}\n            </div>\n          </div>\n        </ContentWrapper>\n      </React.Fragment>\n    )\n  }\n}","import React from 'react';\n\nexport default class SignUp extends React.Component {\n  componentDidMount() {\n    console.log('signup mounted')\n  }\n\n  render() {\n    return (\n      <div>sign up</div>\n    )\n  }\n}\n","// import Constants from '../utils/constants';\n\nexport default async function getPost(id) {\n  return {\n    id: '1',\n    img_src: 'http://loremflickr.com/400/600/sailing',\n    title: 'Title 1',\n    short_description: 'descrip1',\n    description: 'descrip1'\n  }\n\n  // TODO: implement real endpoint\n  // const url = `${Constants.baseUrl}/api/posts/${id}`;\n  //\n  // const postRes = await fetch(url);\n  //\n  // return await postRes.json();\n}\n","import React from 'react';\nimport { Spinner } from \"react-bootstrap\";\n\nexport default class LoadingPageMessage extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin: '2em auto 0 auto'\n        }}\n      >\n        <Spinner animation=\"border\" />\n\n        <span style={{ marginLeft: '1em' }}>Loading…</span>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ContentWrapper from \"../ContentWrapper\";\n\nimport getPost from '../../api/getPost';\nimport LoadingPageMessage from \"../LoadingPageMessage\";\n\nexport default class ShowPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true\n    }\n  }\n\n  async componentDidMount() {\n    const id = this.props.match.params.id\n\n    try {\n      this.post = await getPost(id);\n      console.log('this.post', this.post)\n\n      this.setState({ loading: false });\n    } catch (err) {\n\n    }\n  }\n\n  render() {\n    const { loading } = this.state;\n    const { post } = this;\n\n    return (\n      <ContentWrapper>\n        {!loading ?\n          <React.Fragment>\n            <h3>{post.title}</h3>\n            <img src={post.img_src} />\n            <div>{post.description}</div>\n          </React.Fragment>\n          :\n          <LoadingPageMessage />\n        }\n      </ContentWrapper>\n    )\n  }\n}\n","import Constants from '../utils/constants';\n\nexport default async function approveUser(id) {\n  const url = `${Constants.baseUrl}/api/users/${id}/approve`;\n\n  const putOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('tokenId'),\n    }\n  };\n\n  const res = await fetch(url, putOptions);\n\n  return await res.json();\n}\n","import Constants from \"../utils/constants\";\n\nexport default async function deleteUser(id) {\n  const url = `${Constants.baseUrl}/api/users/${id}`;\n\n  const deleteOptions = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('tokenId'),\n    }\n  };\n\n  const res = await fetch(url, deleteOptions);\n\n  return await res.json();\n}","import React from 'react';\nimport {Table, Card, Button} from \"react-bootstrap\";\nimport approveUser from \"../../../api/approveUser\";\nimport deleteUser from \"../../../api/deleteUser\";\n\nexport default class UsersTab extends React.Component {\n  async handleApproveClick(userId) {\n    console.log('approve', userId)\n\n    await approveUser(userId)\n  }\n\n  async handleDeleteUserClick(userId) {\n    console.log('delete', userId)\n\n    await deleteUser(userId)\n  }\n\n  render() {\n    const { users } = this.props;\n\n    return (\n      <React.Fragment>\n        <Card><Card.Body>\n          <Table striped bordered hover style={{ margin: '0' }}>\n            <thead>\n              <tr>\n                <th>Email</th>\n                <th>approve</th>\n                <th>delete</th>\n              </tr>\n            </thead>\n\n            <tbody>\n            {users.map((user, index) =>\n              <tr key={`user-row-${user.id}-${index}`}>\n                <td>{user.email}</td>\n                <td\n                  onClick={() => this.handleApproveClick(user.id)}\n                  style={{ cursor: 'pointer '}}\n                >\n                  X\n                </td>\n                <td\n                  onClick={() => this.handleDeleteUserClick(user.id)}\n                  style={{ cursor: 'pointer '}}\n                >\n                  X\n                </td>\n              </tr>\n            )}\n            </tbody>\n          </Table>\n        </Card.Body></Card>\n      </React.Fragment>\n    )\n  }\n}","import Constants from '../utils/constants';\n\nexport default async function getUsers() {\n  const url = `${Constants.baseUrl}/api/users`;\n\n  const getOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('tokenId'),\n    }\n  };\n\n  const usersRes = await fetch(url, getOptions);\n\n  return await usersRes.json();\n}\n","import React from 'react';\nimport styled from \"styled-components\";\nimport { Tabs, Tab } from \"react-bootstrap\";\n\nimport LoadingPageMessage from '../../LoadingPageMessage';\nimport UsersTab from \"./UsersTab\";\n\nimport getCarouselSlides from '../../../api/getCarouselSlides';\nimport getPosts from \"../../../api/getPosts\";\nimport getUsers from \"../../../api/getUsers\";\nimport ContentWrapper from \"../../ContentWrapper\";\n\nconst StyledWrapper = styled.div`\n  [role='tab'] {\n    color: white;\n    \n    &.disabled {\n      color: grey;\n    }\n`;\n\nexport default class AdminPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.users = [];\n    this.carouselSlides = [];\n    this.posts = [];\n\n    this.state = {\n      activeKey: 'users',\n      loadingPage: true\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.users = await getUsers();\n      this.carouselSlides = await getCarouselSlides();\n      this.posts = await getPosts();\n\n      this.setState({loadingPage: false});\n    } catch (err) {\n\n    }\n  }\n\n  render() {\n    const {loadingPage, activeKey} = this.state;\n    const {users, carouselSlides, posts} = this;\n\n    return (\n      <ContentWrapper>\n        <StyledWrapper>\n        {!loadingPage ?\n          <Tabs\n            activeKey={activeKey}\n            onSelect={(tab) => this.setState({activeKey: tab})}\n            variant='pills'\n            style={{\n              marginBottom: '1em',\n              paddingBottom: '1em',\n              borderBottom: '1px solid white'\n            }}\n          >\n            <Tab eventKey=\"users\" title=\"Users\">\n              <UsersTab users={users}/>\n            </Tab>\n\n            <Tab eventKey=\"carousel\" title=\"Carousel\">\n              Carousel\n              {carouselSlides.map((slide, index) =>\n                <div key={`slide-${index}`}>{slide.label}</div>\n              )}\n            </Tab>\n\n            <Tab eventKey=\"posts\" title=\"Posts\" style={{ color: 'white' }}>\n              Posts\n              {posts.map((post, index) =>\n                <div key={`post-${index}`}>{post.title}</div>\n              )}\n            </Tab>\n\n            <Tab eventKey=\"boats\" title=\"Boats\" disabled />\n            <Tab eventKey=\"calendar\" title=\"Calendar\" disabled />\n          </Tabs>\n          :\n          <LoadingPageMessage/>\n        }\n        </StyledWrapper>\n      </ContentWrapper>\n    )\n  }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport TopNavBar from \"./components/TopNavBar\";\nimport HomePage from './components/pages/HomePage/index';\nimport SignUp from './components/pages/SignUp';\nimport ShowPost from './components/pages/ShowPost';\nimport AdminPanel from './components/pages/AdminPanel';\n\nimport getLoggedInUser from \"../src/api/getLoggedInUser\";\n\nimport { loginUser } from \"./store/general\";\n\nclass App extends React.Component {\n  async componentDidMount() {\n    const { loginUser } = this.props;\n\n    if (localStorage.getItem('tokenId')) {\n      const user = await getLoggedInUser();\n\n      loginUser({ userObj: user[0] });\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <TopNavBar />\n\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/sign-up\" component={SignUp} />\n        <Route exact path=\"/posts/:id\" component={ShowPost} />\n        <Route exact path=\"/admin-panel\" component={AdminPanel} />\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { loggedInUser } = state.general;\n\n  return { loggedInUser };\n};\n\nconst mapDispatchToProps = { loginUser };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport general from './general';\n\nconst reducer = combineReducers({\n  general\n});\n\nexport default configureStore({ reducer });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}